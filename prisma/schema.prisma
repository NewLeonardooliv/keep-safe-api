// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(uuid())
  name      String
  email     String      @unique
  password  String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  VaultUser VaultUser[]
  Vault     Vault[]

  @@map("users")
}

model Credencial {
  id           String   @id @default(uuid())
  title        String
  username     String
  passwordHash String   @map("password_hash")
  url          String
  notes        String?
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @default(now()) @updatedAt @map("updated_at")

  vault   Vault  @relation(fields: [vaultId], references: [id], onDelete: Cascade)
  vaultId String @map("vault_id")

  @@map("credencials")
}

model VaultUser {
  id        String   @id @default(uuid())
  vaultId   String   @map("vault_id")
  userId    String   @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  vault Vault @relation(fields: [vaultId], references: [id], onDelete: Cascade)

  @@map("vault_users")
}

model Vault {
  id          String   @id @default(uuid())
  name        String
  description String?
  ownerId     String   @map("owner_id")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")

  user User @relation(fields: [ownerId], references: [id], onDelete: Cascade)

  VaultUser  VaultUser[]
  Credencial Credencial[]

  @@map("vaults")
}
